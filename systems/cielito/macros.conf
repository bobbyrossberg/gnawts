[jmtti]
definition = `jmtti(days=14)`
iseval = 0

[smtti]
definition = `smtti(days=14)`
iseval = 0

[el]
definition = `el(days=14)`
iseval = 0

[job(2)]
args = jobid,latest
definition = (sourcetype=moabs job=$jobid$) OR [search sourcetype=moabs otype=job job=$jobid$ latest=$latest$ | head 1 | eval end=if(etype=="JOBEND", end, now()) | lookup hostlist short AS nids OUTPUT long | makemv delim="," long | mvexpand long | lookup nodes nid AS long OUTPUT node | eval query = " _time>=" . start . " _time<= " . end .  " (nid=" . long . " OR host=" . node . " OR node=" . node . ")" | fields + query | format maxresults=1000] 
errormsg = 
iseval = 0
validation = 

[jobKillingNodes]
definition = index=summary nodeStateChange=*-ERR | lookup nodes nid AS nids OUTPUT node | lookup jobe node OUTPUT job htime | where NOT isnull(job)

[jmtti(1)]
args = days
# if jobERRCountInWindow==0, JMTTI denominator would be 0 (infinite JMTTI),
# so just set JMTTI to systemUptimeHoursInWindow
definition = index=summary systemUptimeHoursToday | join _time type=outer [search `jobKillingNodes` | timechart span=1d dc(job) AS jobERRCountToday] | sort _time | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | streamstats sum(jobERRCountToday) AS jobERRCountInWindow window=$days$ | eval JMTTi=systemUptimeHoursInWindow/jobERRCountInWindow | eval JMTTI=if(isnull(JMTTi),systemUptimeHoursInWindow,JMTTi)
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[smtti(1)]
args = days
# if systemERRCountInWindow==0, SMTTI denominator would be 0 (infinite SMTTI),
# so just set SMTTI to systemUptimeHoursInWindow
definition = index=summary systemStateChange=ERR direction=increasing | timechart span=1d count AS systemERRCountToday | join _time [search index=summary systemUptimeHoursToday] | sort _time | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | streamstats sum(systemERRCountToday) AS systemERRCountInWindow window=$days$ | eval SMTTi=round(systemUptimeHoursInWindow/systemERRCountInWindow,2) | eval SMTTI=if(isnull(SMTTi),systemUptimeHoursInWindow,SMTTi)
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[el(1)]
args = days
definition = index=summary systemUptimeHoursToday | sort _time | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | eval EL=100*systemUptimeHoursInWindow/(24*$days$) | timechart max(EL) AS EL
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[systemUptimeYesterday]
args =
definition = `systemUptimeYesterday(now())`
errormsg =
iseval = 0

[systemUptimeYesterday(1)]
args = Today
# gentimes may help avoid the below subsearch craziness
definition = [search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR latest=" . relative_time($Today$, "-1d@d") | fields + query ] | head 1 | eval Time=relative_time($Today$, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR earliest=" . relative_time($Today$, "-0d@d") | fields + query ] | tail 1 | eval Time=relative_time($Today$, "-0d@d") | eval Fake=1] | append [search [search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR earliest=" . relative_time($Today$, "-1d@d") . " latest=" . relative_time($Today$, "-0d@d") | fields + query] | eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(direction="decreasing",round(durationSeconds/3600,2),0) | stats sum(systemUptimeHours) AS systemUptimeHoursToday | eval info_min_time=round(relative_time($Today$, "-1d@d"),0) | eval info_max_time=round(relative_time($Today$, "-0d@d"),0) | eval _time=info_min_time
# for testing:
1295506800
#definition = [search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR latest=" . relative_time(1295506800, "-1d@d") | fields + query ] | head 1 | eval Time=relative_time(1295506800, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR earliest=" . relative_time(1295506800, "-0d@d") | fields + query ] | tail 1 | eval Time=relative_time(1295506800, "-0d@d") | eval Fake=1] | append [search [search index=summary systemStateChange=USR | head 1 | eval query="index=summary systemStateChange=USR earliest=" . relative_time(1295506800, "-1d@d") . " latest=" . relative_time(1295506800, "-0d@d") | fields + query] | eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(direction="decreasing",round(durationSeconds/3600,2),0)
#definition = [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time(1295506800, "-1d@d") | fields + query ] | head 1 | eval _time=relative_time(1295506800, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time(1295506800, "-0d@d") | fields + query ] | tail 1 | eval _time=relative_time(1295506800, "-0d@d") | eval Fake=1] | append [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time(1295506800, "-1d@d") . " latest=" . relative_time(1295506800, "-0d@d") | fields + query] | sort _time | transaction systemStateChange stemUptime" startswith="direction=increasing" ensdwith="direction=decreasing"
#definition = [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time($Today$, "-1d@d") | fields + query ] | head 1 | eval Time=relative_time($Today$, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time($Today$, "-0d@d") | fields + query ] | tail 1 | eval Time=relative_time($Today$, "-0d@d") | eval Fake=1] | append [search [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time($Today$, "-1d@d") . " latest=" . relative_time($Today$, "-0d@d") | fields + query] | eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(systemStateChange="USR" AND direction="decreasing",round(durationSeconds/3600,2),0) | eval systemERR=if(systemStateChange="ERR" AND crossing="increasing" AND NOT Fake=1,1,0) | stats sum(systemUptimeHours) AS systemUptimeHoursToday, sum(systemERR) as systemERRCountToday | eval info_min_time=round(relative_time($Today$, "-1d@d"),0) | eval info_max_time=round(relative_time($Today$, "-0d@d"),0) | eval _time=info_min_time
#definition = `latestrecord($Today$, "-1d@d")` | head 1 | eval Time=relative_time($Today$, "-1d@d") | eval Fake=1 | append [search `latestrecord($Today$, "-0d@d")` | head 1 | eval Time=relative_time($Today$, "-0d@d") | eval Fake=1] | append [search `latestrecord($Today$, "-0d@d", relative_time($Today$, "-1d@d"))` | eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(systemStateChange="ERR" AND ((crossing="increasing" AND NOT Fake=1) OR (crossing="decreasing" AND Fake=1)),round(durationSeconds/3600,2),0) | eval systemERR=if((systemStateChange="ERR" AND crossing="increasing" AND NOT Fake=1),1,0) | stats sum(systemUptimeHours) AS systemUptimeHoursToday, sum(systemERR) as systemERRCountToday | eval info_min_time=round(relative_time($Today$, "-1d@d"),0) | eval info_max_time=round(relative_time($Today$, "-0d@d"),0) | eval _time=info_min_time
errormsg =
iseval = 0
validation =

[latestrecord(3)]
args = Today, days, earliest
definition = [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=$earliest$ latest=" . relative_time($Today$, $days$) | fields + query]

[latestrecord(2)]
args = Today, days
definition = `latestrecord(Today=$Today$, days=$days$, earliest=0)`

[nodedownsince]
args =
definition = `nodedownsince(14)`
errormsg =
iseval = 0
validation =

[nodedownsince(1)]
args = days
definition = [| savedsearch StateChange  | statechange "{'USR-ERR_Threshold':7, 'nodeField':'nids'}" | tail 1 | lookup hostlist short AS StateName_ERR OUTPUT long | makemv delim="," long | mvexpand long | eval query="index=summary earliest=".now()-$days$*86400." nodeStateChange=*-ERR nid=".long | fields + query | format] | eval HoursSinceDown=(now() - _time)/3600.0 | eval LatestTimeDown=strftime(_time, "%m/%d/%y:%H:%M:%S") | stats min(HoursSinceDown) as HoursSinceDown max(LatestTimeDown) as LatestTimeDown count as CountInWindow BY nid | table nid CountInWindow LatestTimeDown HoursSinceDown
errormsg =
iseval = 0
validation =

[nodedownsincecjs]
# special test one for Charlie since I don't get up-to-date events
args =
definition = [search tag=state latest=03/14/2011:00:00:00 | statechange "{'USR-ERR_Threshold':7, 'nodeField':'nids'}" | tail 1 | lookup hostlist short AS StateName_ERR OUTPUT long | makemv delim="," long | mvexpand long | eval query="index=summary latest=03/14/2011:00:00:00 nodeStateChange=*-ERR nid=".long | fields + query | format] | eval HoursSinceDown=(now() - _time)/3600.0 | eval LatestTimeDown=strftime(_time, "%m/%d/%y:%H:%M:%S") | stats min(HoursSinceDown) as HoursSinceDown max(LatestTimeDown) as LatestTimeDown count as CountInWindow BY nid | table nid CountInWindow LatestTimeDown HoursSinceDown
errormsg =
iseval = 0
validation =
