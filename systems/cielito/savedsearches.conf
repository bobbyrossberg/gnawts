[killedJobs]
action.email.reportServerEnabled = 0
alert.track = 1
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=summary nodeStateChange=*-ERR | lookup nodes nid OUTPUT node | lookup jobe node OUTPUT job htime | search job>1 | dedup job htime
vsid = go4np8wu

[SMTTI]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -3mon@mon
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = `smtti` | timechart span=1d max(SMTTI) as SMTTI
vsid = *:go4r17yc

[JMTTI]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -3mon@mon
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = `jmtti` | timechart span=1d max(JMTTI) as JMTTI
vsid = *:go4r7kjf

[nodeStateCounts]
action.email.reportServerEnabled = 0
alert.track = 1
dispatch.earliest_time = -3mon@mon
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=summary nodeStateChange | dedup _time | sort _time | nointerpolate | chart max(USR) AS ProductionUptime max(SYS) AS ScheduledDowntime max(ERR) AS UnscheduledDowntime by _time
vsid = *:go4rk0rj

[StateChange]
action.email.inline = 1
action.email.reportServerEnabled = 0
action.summary_index = 1
alert.suppress = 0
alert.suppress.period = h
alert.track = 1
cron_schedule = * */4 * * *
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = [search index=summary nodeStateList | head 1 | eval query="(_time="._time." index=summary nodeStateList) OR (_time>"._time." tag=state)" | fields + query] | reverse | statechange "{'USR-ERR_Threshold':7, 'USR-SYS_Threshold':7}"
vsid = go4s3dlv

[resetJobeLookup]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.suppress.period = h
alert.track = 1
cron_schedule = 45 2 1 * *
description = jobe lookup table associates nodes with jobs actually running on them
dispatch.earliest_time = -3mon@mon
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = sourcetype=moabs nids=* (etype=jobstart OR etype=jobend OR etype=jobcancel) | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | dedup job start etype | eval time=if(etype=="JOBSTART",start,end) | eval htime=strftime(time, "%Y-%m-%d %H:%M:%S") | eval job=if(etype=="JOBSTART",job,null()) | eval user=if(etype=="JOBSTART",user,null()) | eval nnodes=if(etype=="JOBSTART",nnodes,null()) | lookup hostlist short AS nids OUTPUT long |  makemv delim="," long | mvexpand long | lookup nodes nid AS long OUTPUT node | fields + htime,time,node,job,user,nnodes | outputlookup max=9999999 jobe.csv.gz
vsid = go230a1w

[updateJobsLookup]
alert.track = 1
cron_schedule = 15 */4 * * *
description = Update jobs lookup with jobs since it was last written
search = [ | inputlookup jobs.csv.gz | head 1 | eval query="etype=jobstart start>" . start | fields + query | format] | eval starttime=strftime(start, "%Y-%m-%d %H:%M:%S") | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | lookup hostlist short AS nids OUTPUT long | makemv delim="," long | mvexpand long | dedup job start long | lookup nodes nid AS long OUTPUT  node | fields +  starttime,start,job,user,node,nnodes  | append [ | inputlookup jobs.csv] | outputlookup jobs.csv.gz
vsid = gm54qwwy

[updateJobeLookup]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.suppress.period = h
alert.track = 1
cron_schedule = 30 */4 * * *
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = [ | inputlookup jobe.csv.gz | head 1 | eval query="sourcetype=moabs nids=* (etype=jobstart OR etype=jobend OR etype=jobcancel) time>" . _time | fields + query ] | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | dedup job start etype | eval time=if(etype=="JOBSTART",start,end) | eval htime=strftime(time, "%Y-%m-%d %H:%M:%S") | eval job=if(etype=="JOBSTART",job,null()) | eval user=if(etype=="JOBSTART",user,null()) | eval nnodes=if(etype=="JOBSTART",nnodes,null()) | lookup hostlist short AS nids OUTPUT long |  makemv delim="," long | mvexpand long | lookup nodes nid AS long OUTPUT node | fields + htime,time,node,job,user,nnodes | append [ | inputlookup jobe.csv.gz] | outputlookup max=9999999 jobe.csv.gz
vsid = go2v9131

[resetJobsLookup]
action.email.reportServerEnabled = 0
alert.track = 1
cron_schedule = 2 1 1 * *
request.ui_dispatch_view = flashtimeline
search = etype=jobstart | eval starttime=strftime(start, "%Y-%m-%d %H:%M:%S") | fields - _raw _cd _kv _serial _si _sourcetype _indextime _time | lookup hostlist short AS nids OUTPUT long | makemv delim="," long | mvexpand long | dedup job start long | lookup nodes nid AS long OUTPUT  node | fields +  starttime,start,job,user,node,nnodes | outputlookup max=9999999 jobs.csv.gz
vsid = gm5efjlx
