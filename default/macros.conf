[nodedown]
args = 
definition = `nodedown(node=*, secs=601)`
errormsg = 
iseval = 0
validation = 

[nodedown(1)]
args = node
definition = `nodedown(node=$node$, secs=601)`
errormsg = 
iseval = 0
validation = 

[nodedown(2)]
args = node,secs
definition = [search $node$ sourcetype=moabs etype=nodedown | eval start=_time-$secs$ | eval end=_time+1 | eval query = " _time>" . start . " _time<" . end . " " . node | fields + query | format maxresults=1000]
errormsg = 
iseval = 0
validation = 

[job(1)]
args = jobid
definition = `job(jobid=$jobid$, latest=now)`
errormsg = 
iseval = 0
validation = 

[job(2)]
args = jobid,latest
definition = (sourcetype=slurm Job_id=$jobid$) OR (sourcetype=slurmj JobId=$jobid$) OR [search sourcetype=moabs job=$jobid$ latest=$latest$ | head 1 | eval end=if(start==end, now(), _time) | eval start=start-1 | eval end=end+1 | makemv delim="," nodes | mvexpand nodes | dedup nodes | eval query = " _time>=" . start . " _time<= " . end .  " " . nodes | fields + query | format maxresults=1000] | search NOT syslog-ng
errormsg = 
iseval = 0
validation = 

[systemStateTransitions(1)]
args = nodeCountThreshold
definition = otype=node | stats count by etype, _time | sort _time | eval nodeDelta=if(etype=="NODEDOWN",-count,count) | accum nodeDelta AS nodeUpTotal | eval systemState=if(nodeUpTotal<$nodeCountThreshold$ AND nodeUpTotal-$nodeCountThreshold$>= nodeDelta,"uptime","") | eval systemState=if(nodeUpTotal>=$nodeCountThreshold$ AND nodeUpTotal-$nodeCountThreshold$ <nodeDelta,"downtime",systemState) | search NOT systemState="" | delta _time AS durationSeconds | eval durationHours=round(durationSeconds/3600,2) | fields + systemState durationHours nodeUpTotal
errormsg = nodeCountThreshold must be positive
iseval = 0
validation = nodeCountThreshold>0

[jmtti(1)]
args = days
definition = index=summary nodeStateChange=USR-ERR | timechart span=1d count AS nodeERRCountToday | join _time [ search index=summary systemUptimeHoursToday] | fields + systemUptimeHoursToday nodeERRCountToday | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | streamstats sum(nodeERRCountToday) AS nodeERRCountInWindow window=$days$ | eval JMTTI=systemUptimeHoursInWindow/nodeERRCountInWindow | timechart max(JMTTI) AS JMTTI
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[smtti(1)]
args = days
definition = index=summary systemUptimeHoursToday=* | sort info_max_time | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | streamstats sum(systemERRCountToday) AS systemERRCountInWindow window=$days$ | eval systemERRCountInWindow=if(systemErrCountInWindow>0,systemErrCountInWindow,1) | eval SMTTI=round(systemUptimeHoursInWindow/systemERRCountInWindow,2) | eval _time=info_max_time | timechart max(SMTTI) AS SMTTI
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[el(1)]
args = days
definition = index=summary systemUptimeHoursToday=* | sort info_max_time | streamstats sum(systemUptimeHoursToday) AS systemUptimeHoursInWindow window=$days$ | eval EL=100*systemUptimeHoursInWindow/(24*$days$) | timechart max(EL) AS EL
errormsg = Number of days must be positive.
iseval = 0
validation = days>0

[systemUptimeYesterday]
args = 
definition = `systemUptimeYesterday(now())`
errormsg = 
iseval = 0

[systemUptimeYesterday(1)]
args = Today
#definition = [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time($Today$, "-1d@d") | fields + query ] 
#| eval Time=relative_time($Today$, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time($Today$, "-0d@d") | fields + query ] | head 1 | eval Time=relative_time($Today$, "-0d@d") | eval Fake=1]
# | append [search [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time($Today$, "-1d@d") . " latest=" . relative_time($Today$, "-0d@d") | fields + query]]
#| eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(systemStateChange="USR-ERR" AND ((crossing="increasing" AND NOT Fake=1) OR (crossing="decreasing" AND Fake=1)),round(durationSeconds/3600,2),0) | eval systemERR=if(systemStateChange="USR-ERR" AND crossing="increasing" AND NOT Fake=1,1,0) | stats sum(systemUptimeHours) AS systemUptimeHoursToday, sum(systemERR) as systemERRCountToday | eval info_min_time=round(relative_time($Today$, "-1d@d"),0) | eval info_max_time=round(relative_time($Today$, "-0d@d"),0) | eval _time=info_min_time
definition = [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time($Today$, "-1d@d") | fields + query ] | eval Time=relative_time($Today$, "-1d@d") | eval Fake=1 | append [search [ search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* latest=" . relative_time($Today$, "-0d@d") | fields + query ] | head 1 | eval Time=relative_time($Today$, "-0d@d") | eval Fake=1] | append [search [search index=summary systemStateChange=* | head 1 | eval query="index=summary systemStateChange=* earliest=" . relative_time($Today$, "-1d@d") . " latest=" . relative_time($Today$, "-0d@d") | fields + query] | eval Time=_time] | sort Time | delta Time AS durationSeconds | eval systemUptimeHours=if(systemStateChange="USR-ERR" AND ((crossing="increasing" AND NOT Fake=1) OR (crossing="decreasing" AND Fake=1)),round(durationSeconds/3600,2),0) | eval systemERR=if(systemStateChange="USR-ERR" AND crossing="increasing" AND NOT Fake=1,1,0) | stats sum(systemUptimeHours) AS systemUptimeHoursToday, sum(systemERR) as systemERRCountToday | eval info_min_time=round(relative_time($Today$, "-1d@d"),0) | eval info_max_time=round(relative_time($Today$, "-0d@d"),0) | eval _time=info_min_time
errormsg = 
iseval = 0
validation = 
